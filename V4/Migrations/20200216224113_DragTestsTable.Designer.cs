// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using V4.Models;

namespace V4.Migrations
{
    [DbContext(typeof(v4Context))]
    [Migration("20200216224113_DragTestsTable")]
    partial class DragTestsTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("V4.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Industry");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<string>("State");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("V4.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("State");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int>("Zip");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("V4.Models.DragTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ColNo");

                    b.Property<string>("Name");

                    b.Property<int>("RowNo");

                    b.HasKey("Id");

                    b.ToTable("DragTests");
                });

            modelBuilder.Entity("V4.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<int>("CompanyID");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("DefaultTeam");

                    b.Property<string>("First_Name");

                    b.Property<string>("Last_Name");

                    b.Property<int?>("TeamId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("Username");

                    b.Property<decimal>("Wage");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("V4.Models.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<string>("AppEndTime");

                    b.Property<string>("AppStartTime");

                    b.Property<decimal>("BudgetedHours");

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CustomerId");

                    b.Property<string>("EndTime");

                    b.Property<decimal>("Hours");

                    b.Property<int>("Men");

                    b.Property<decimal>("Quantity");

                    b.Property<decimal>("Rate");

                    b.Property<string>("RouteNotes");

                    b.Property<DateTime>("ScheduleDate");

                    b.Property<string>("ScheduleStatus");

                    b.Property<string>("StartTime");

                    b.Property<int>("TeamId");

                    b.Property<int>("TeamMemberId1");

                    b.Property<int>("TeamMemberId2");

                    b.Property<int>("TeamMemberId3");

                    b.Property<int>("TeamMemberId4");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("JobId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TeamId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("V4.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<int>("CompanyID");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("DefaultTeamMember1Id");

                    b.Property<int>("DefaultTeamMember2Id");

                    b.Property<int>("DefaultTeamMember3Id");

                    b.Property<int>("DefaultTeamMember4Id");

                    b.Property<string>("TeamName");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("V4.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("JoinDate");

                    b.Property<string>("LastName");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("V4.Models.Employee", b =>
                {
                    b.HasOne("V4.Models.Team")
                        .WithMany("TeamEmployees")
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("V4.Models.Job", b =>
                {
                    b.HasOne("V4.Models.Customer", "Cust")
                        .WithMany("CustomerJobs")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("V4.Models.Team", "Tm")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
